/** @license MIT License (c) copyright 2010-2016 original author or authors */
/** @author Brian Cavalier */
/** @author John Hann */
import Pipe from './Pipe';
import { Time, Sink } from '@most/types';
export interface IndexedValue<A> {
    readonly index: number;
    readonly value: A;
    readonly active: boolean;
}
export declare class IndexSink<A> extends Pipe<A, IndexedValue<A | undefined>> implements Sink<A> {
    readonly index: number;
    active: boolean;
    value: A | undefined;
    constructor(i: number, sink: Sink<IndexedValue<A | undefined>>);
    event(t: Time, x: A): void;
    end(t: Time): void;
}
