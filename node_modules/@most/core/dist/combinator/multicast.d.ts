import { Stream, Scheduler, Sink, Disposable, Time } from '@most/types';
export declare const multicast: <A>(stream: Stream<A>) => Stream<A>;
export declare class MulticastSource<A> implements Stream<A>, Disposable {
    private readonly source;
    private sinks;
    private disposable;
    constructor(source: Stream<A>);
    run(sink: Sink<A>, scheduler: Scheduler): Disposable;
    dispose(): void;
    add(sink: Sink<A>): number;
    remove(sink: Sink<A>): number;
    event(time: Time, value: A): void;
    end(time: Time): void;
    error(time: Time, err: Error): void;
}
export declare class MulticastDisposable<A> implements Disposable {
    private readonly source;
    private readonly sink;
    constructor(source: MulticastSource<A>, sink: Sink<A>);
    dispose(): void;
}
