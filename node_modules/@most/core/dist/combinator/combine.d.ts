/** @license MIT License (c) copyright 2010 original author or authors */
import { Stream } from '@most/types';
import { ToStreamsArray } from './variadic';
/**
 * Combine latest events from two streams
 * @param f function to combine most recent events
 * @param stream1
 * @param stream2
 * @returns stream containing the result of applying f to the most recent
 *  event of each input stream, whenever a new event arrives on any stream.
 */
export declare const combine: <A, B, C>(f: (a: A, b: B) => C, stream1: Stream<A>, stream2: Stream<B>) => Stream<C>;
/**
* Combine latest events from all input streams
* @param f function to combine most recent events
* @param streams most recent events
* @returns stream containing the result of applying f to the most recent
*  event of each input stream, whenever a new event arrives on any stream.
*/
export declare const combineArray: <Args extends unknown[], R>(f: (...args: Args) => R, streams: ToStreamsArray<Args>) => Stream<R>;
