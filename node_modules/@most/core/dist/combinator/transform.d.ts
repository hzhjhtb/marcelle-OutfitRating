/** @license MIT License (c) copyright 2010-2016 original author or authors */
/** @author Brian Cavalier */
/** @author John Hann */
import { Stream } from '@most/types';
/**
 * Transform each value in the stream by applying f to each
 * @param f mapping function
 * @param stream stream to map
 * @returns stream containing items transformed by f
 */
export declare const map: <A, B>(f: (a: A) => B, stream: Stream<A>) => Stream<B>;
/**
* Replace each value in the stream with x
* @param x
* @param stream
* @returns stream containing items replaced with x
*/
export declare const constant: <A, B>(x: B, stream: Stream<A>) => Stream<B>;
/**
* Perform a side effect for each item in the stream
* @param f side effect to execute for each item. The return value will be discarded.
* @param stream stream to tap
* @returns new stream containing the same items as this stream
*/
export declare const tap: <A>(f: (a: A) => unknown, stream: Stream<A>) => Stream<A>;
