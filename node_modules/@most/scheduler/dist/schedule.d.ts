import { Scheduler, Time, Task, ScheduledTask } from '@most/types';
/**
 * Read the current time from the provided Scheduler
 */
export declare const currentTime: (scheduler: Scheduler) => Time;
/**
 * Schedule a task to run as soon as possible, but
 * not in the current call stack
 */
export declare const asap: import("@most/prelude").Curried2<Task, Scheduler, ScheduledTask>;
/**
 * Schedule a task to run after a millisecond delay
 */
export declare const delay: import("@most/prelude").Curried3<number, Task, Scheduler, ScheduledTask>;
/**
 * Schedule a task to run periodically, with the
 * first run starting asap
 */
export declare const periodic: import("@most/prelude").Curried3<number, Task, Scheduler, ScheduledTask>;
/**
 * Cancel a scheduledTask
 */
export declare const cancelTask: (scheduledTask: ScheduledTask) => void;
/**
 * Cancel all ScheduledTasks for which a predicate is true
 * @deprecated Will be removed in 2.0.0
 */
export declare const cancelAllTasks: import("@most/prelude").Curried2<(task: ScheduledTask) => boolean, Scheduler, void>;
