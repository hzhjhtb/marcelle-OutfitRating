{"version":3,"file":"index.es.js","sources":["../src/dispose.ts","../src/disposeNone.ts","../src/disposeOnce.ts","../src/disposeWith.ts","../src/disposeAll.ts","../src/tryDispose.ts"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { Disposable } from '@most/types'\n\nexport const dispose = (disposable: Disposable): void =>\n  disposable.dispose()\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { Disposable } from '@most/types'\n\nexport const disposeNone = (): Disposable => NONE\nconst NONE = new (class DisposeNone implements Disposable {\n  dispose(): void{}\n})()\n\nexport const isDisposeNone = (d: Disposable): boolean =>\n  d === NONE\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { Disposable } from '@most/types'\n\n/**\n * Wrap an existing disposable (which may not already have been once()d)\n * so that it will only dispose its underlying resource at most once.\n */\nexport const disposeOnce = (disposable: Disposable): Disposable =>\n  new DisposeOnce(disposable)\n\nclass DisposeOnce implements Disposable {\n  private disposed = false;\n  private disposable?: Disposable\n\n  constructor(disposable: Disposable) {\n    this.disposable = disposable\n  }\n\n  dispose(): void {\n    if (!this.disposed) {\n      this.disposed = true\n      if (this.disposable) {\n        this.disposable.dispose()\n        this.disposable = undefined\n      }\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { disposeOnce } from './disposeOnce'\nimport { curry2 } from '@most/prelude'\nimport { Disposable } from '@most/types'\n\nexport interface DisposeWith {\n  (): DisposeWith\n  <R>(dispose: (resource: R) => void): (resource: R) => Disposable\n  <R>(dispose: (resource: R) => void, resource: R): Disposable\n}\n\n/**\n * Create a Disposable that will use the provided\n * dispose function to dispose the resource\n */\nexport const disposeWith: DisposeWith = curry2((dispose, resource) =>\n  disposeOnce(new DisposeWithImpl(dispose, resource)))\n\n/**\n * Disposable represents a resource that must be\n * disposed/released. It aggregates a function to dispose\n * the resource and a handle to a key/id/handle/reference\n * that identifies the resource\n */\nclass DisposeWithImpl<R> implements Disposable {\n  private _dispose: (resource: R) => void;\n  private _resource: R;\n\n  constructor(dispose: (resource: R) => void, resource: R) {\n    this._dispose = dispose\n    this._resource = resource\n  }\n\n  dispose(): void {\n    this._dispose(this._resource)\n  }\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\nimport { append, reduce, curry2, concat } from '@most/prelude'\nimport { disposeNone, isDisposeNone } from './disposeNone'\nimport { Disposable } from '@most/types'\n\n/**\n * Aggregate a list of disposables into a DisposeAll\n */\nexport const disposeAll = (ds: ArrayLike<Disposable>): Disposable => {\n  const merged = reduce(merge, [], ds)\n  return merged.length === 0 ? disposeNone() : new DisposeAll(merged)\n}\n\n/**\n * Convenience to aggregate 2 disposables\n */\nexport const disposeBoth = curry2((d1: Disposable, d2: Disposable): Disposable =>\n  disposeAll([d1, d2]))\n\nconst merge = (ds: Disposable[], d: Disposable): Disposable[] =>\n  isDisposeNone(d) ? ds\n    : d instanceof DisposeAll ? concat(ds, d.disposables)\n      : append(d, ds)\n\nclass DisposeAll implements Disposable {\n  readonly disposables: ArrayLike<Disposable>\n\n  constructor(disposables: ArrayLike<Disposable>) {\n    this.disposables = disposables\n  }\n\n  dispose(): void {\n    throwIfErrors(disposeCollectErrors(this.disposables))\n  }\n}\n\n/**\n * Dispose all, safely collecting errors into an array\n */\nconst disposeCollectErrors = (disposables: ArrayLike<Disposable>): Error[] =>\n  reduce(appendIfError, [], disposables)\n\n/**\n * Call dispose and if throws, append thrown error to errors\n */\nconst appendIfError = (errors: Error[], d: Disposable): Error[] => {\n  try {\n    d.dispose()\n  } catch (e) {\n    errors.push(e)\n  }\n  return errors\n}\n\n/**\n * Throw DisposeAllError if errors is non-empty\n * @throws\n */\nconst throwIfErrors = (errors: ArrayLike<Error>): void => {\n  if (errors.length > 0) {\n    throw new DisposeAllError(`${errors.length} errors`, errors)\n  }\n}\n\nexport class DisposeAllError implements Error {\n  readonly name: string = 'DisposeAllError'\n  readonly stack?: string;\n  readonly message: string;\n  readonly errors: ArrayLike<Error>;\n\n  constructor(message: string, errors: ArrayLike<Error>) {\n    this.message = message\n    this.errors = errors\n    Error.call(this, message)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, DisposeAllError)\n    }\n    this.stack = `${this.stack}${formatErrorStacks(this.errors)}`\n  }\n}\nDisposeAllError.prototype = Object.create(Error.prototype)\n\nconst formatErrorStacks = (errors: ArrayLike<Error>): string =>\n  reduce(formatErrorStack, '', errors)\n\nconst formatErrorStack = (s: string, e: Error, i: number): string =>\n  s + `\\n[${(i + 1)}] ${e.stack}`\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { curry3 } from '@most/prelude'\nimport { Disposable, Sink, Time } from '@most/types'\n\n// Try to dispose the disposable.  If it throws, send\n// the error to sink.error with the provided Time value\nexport const tryDispose = curry3((t: Time, disposable: Disposable, sink: Sink<unknown>): void => {\n  try {\n    disposable.dispose()\n  } catch (e) {\n    sink.error(t, e)\n  }\n})\n"],"names":[],"mappings":"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"}