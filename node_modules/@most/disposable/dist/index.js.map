{"version":3,"file":"index.js","sources":["../src/dispose.ts","../src/disposeNone.ts","../src/disposeOnce.ts","../src/disposeWith.ts","../src/disposeAll.ts","../src/tryDispose.ts"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { Disposable } from '@most/types'\n\nexport const dispose = (disposable: Disposable): void =>\n  disposable.dispose()\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { Disposable } from '@most/types'\n\nexport const disposeNone = (): Disposable => NONE\nconst NONE = new (class DisposeNone implements Disposable {\n  dispose(): void{}\n})()\n\nexport const isDisposeNone = (d: Disposable): boolean =>\n  d === NONE\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { Disposable } from '@most/types'\n\n/**\n * Wrap an existing disposable (which may not already have been once()d)\n * so that it will only dispose its underlying resource at most once.\n */\nexport const disposeOnce = (disposable: Disposable): Disposable =>\n  new DisposeOnce(disposable)\n\nclass DisposeOnce implements Disposable {\n  private disposed = false;\n  private disposable?: Disposable\n\n  constructor(disposable: Disposable) {\n    this.disposable = disposable\n  }\n\n  dispose(): void {\n    if (!this.disposed) {\n      this.disposed = true\n      if (this.disposable) {\n        this.disposable.dispose()\n        this.disposable = undefined\n      }\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { disposeOnce } from './disposeOnce'\nimport { curry2 } from '@most/prelude'\nimport { Disposable } from '@most/types'\n\nexport interface DisposeWith {\n  (): DisposeWith\n  <R>(dispose: (resource: R) => void): (resource: R) => Disposable\n  <R>(dispose: (resource: R) => void, resource: R): Disposable\n}\n\n/**\n * Create a Disposable that will use the provided\n * dispose function to dispose the resource\n */\nexport const disposeWith: DisposeWith = curry2((dispose, resource) =>\n  disposeOnce(new DisposeWithImpl(dispose, resource)))\n\n/**\n * Disposable represents a resource that must be\n * disposed/released. It aggregates a function to dispose\n * the resource and a handle to a key/id/handle/reference\n * that identifies the resource\n */\nclass DisposeWithImpl<R> implements Disposable {\n  private _dispose: (resource: R) => void;\n  private _resource: R;\n\n  constructor(dispose: (resource: R) => void, resource: R) {\n    this._dispose = dispose\n    this._resource = resource\n  }\n\n  dispose(): void {\n    this._dispose(this._resource)\n  }\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\nimport { append, reduce, curry2, concat } from '@most/prelude'\nimport { disposeNone, isDisposeNone } from './disposeNone'\nimport { Disposable } from '@most/types'\n\n/**\n * Aggregate a list of disposables into a DisposeAll\n */\nexport const disposeAll = (ds: ArrayLike<Disposable>): Disposable => {\n  const merged = reduce(merge, [], ds)\n  return merged.length === 0 ? disposeNone() : new DisposeAll(merged)\n}\n\n/**\n * Convenience to aggregate 2 disposables\n */\nexport const disposeBoth = curry2((d1: Disposable, d2: Disposable): Disposable =>\n  disposeAll([d1, d2]))\n\nconst merge = (ds: Disposable[], d: Disposable): Disposable[] =>\n  isDisposeNone(d) ? ds\n    : d instanceof DisposeAll ? concat(ds, d.disposables)\n      : append(d, ds)\n\nclass DisposeAll implements Disposable {\n  readonly disposables: ArrayLike<Disposable>\n\n  constructor(disposables: ArrayLike<Disposable>) {\n    this.disposables = disposables\n  }\n\n  dispose(): void {\n    throwIfErrors(disposeCollectErrors(this.disposables))\n  }\n}\n\n/**\n * Dispose all, safely collecting errors into an array\n */\nconst disposeCollectErrors = (disposables: ArrayLike<Disposable>): Error[] =>\n  reduce(appendIfError, [], disposables)\n\n/**\n * Call dispose and if throws, append thrown error to errors\n */\nconst appendIfError = (errors: Error[], d: Disposable): Error[] => {\n  try {\n    d.dispose()\n  } catch (e) {\n    errors.push(e)\n  }\n  return errors\n}\n\n/**\n * Throw DisposeAllError if errors is non-empty\n * @throws\n */\nconst throwIfErrors = (errors: ArrayLike<Error>): void => {\n  if (errors.length > 0) {\n    throw new DisposeAllError(`${errors.length} errors`, errors)\n  }\n}\n\nexport class DisposeAllError implements Error {\n  readonly name: string = 'DisposeAllError'\n  readonly stack?: string;\n  readonly message: string;\n  readonly errors: ArrayLike<Error>;\n\n  constructor(message: string, errors: ArrayLike<Error>) {\n    this.message = message\n    this.errors = errors\n    Error.call(this, message)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, DisposeAllError)\n    }\n    this.stack = `${this.stack}${formatErrorStacks(this.errors)}`\n  }\n}\nDisposeAllError.prototype = Object.create(Error.prototype)\n\nconst formatErrorStacks = (errors: ArrayLike<Error>): string =>\n  reduce(formatErrorStack, '', errors)\n\nconst formatErrorStack = (s: string, e: Error, i: number): string =>\n  s + `\\n[${(i + 1)}] ${e.stack}`\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { curry3 } from '@most/prelude'\nimport { Disposable, Sink, Time } from '@most/types'\n\n// Try to dispose the disposable.  If it throws, send\n// the error to sink.error with the provided Time value\nexport const tryDispose = curry3((t: Time, disposable: Disposable, sink: Sink<unknown>): void => {\n  try {\n    disposable.dispose()\n  } catch (e) {\n    sink.error(t, e)\n  }\n})\n"],"names":["curry2","reduce","concat","append","curry3"],"mappings":"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"}