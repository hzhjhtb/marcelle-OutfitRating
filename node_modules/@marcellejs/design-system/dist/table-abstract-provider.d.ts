import type { Writable } from 'svelte/store';
export interface TableProviderOptions {
    itemsPerPage?: number;
}
export declare abstract class TableDataProvider<T extends Record<string, unknown> = Record<string, unknown>> {
    options: TableProviderOptions;
    data: Writable<T[]>;
    total: Writable<number>;
    error: Writable<Error>;
    constructor(options?: TableProviderOptions);
    paginate(n: number): void;
    get(i: number): Promise<T>;
    abstract update(): Promise<void>;
    abstract delete(i: number): Promise<T>;
    abstract page(i: number): Promise<void>;
    abstract sort(sorting: {
        col: string;
        ascending: boolean;
    }): Promise<void>;
}
