import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
export function mkdirp(dir) {
    try {
        fs.mkdirSync(dir, { recursive: true });
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
    }
    catch (e) {
        if (e.code === 'EEXIST')
            return;
        throw e;
    }
}
export function rimraf(p) {
    fs.rmdirSync(p, { recursive: true });
}
function identity(x) {
    return x;
}
export function copy(from, to, rename = identity) {
    if (!fs.existsSync(from))
        return;
    const stats = fs.statSync(from);
    if (stats.isDirectory()) {
        fs.readdirSync(from).forEach((file) => {
            copy(path.join(from, file), path.join(to, rename(file)));
        });
    }
    else {
        mkdirp(path.dirname(to));
        fs.copyFileSync(from, to);
    }
}
export function dist(p) {
    return fileURLToPath(new URL(`./${p}`, import.meta.url).href);
}
//# sourceMappingURL=utils.js.map