import type { Params, Service } from '@feathersjs/feathers';
import { LazyIterable } from '../../utils/lazy-iterable/lazy-iterable';
interface ServiceIterableParams {
    query: Params['query'];
    skip: number;
    take: number;
}
export declare class ServiceIterable<T> extends LazyIterable<T> {
    private readonly service;
    params: ServiceIterableParams;
    constructor(service: Service<T>, params?: Partial<ServiceIterableParams>);
    skip(n: number): ServiceIterable<T>;
    take(n: number): ServiceIterable<T>;
    select(fields: string[]): ServiceIterable<T>;
    query(q: Params['query']): ServiceIterable<T>;
}
export declare function iterableFromService<T>(service: Service<T>): ServiceIterable<T>;
export {};
