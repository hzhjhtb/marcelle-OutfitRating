import { PCA as MLPCA } from 'ml-pca';
import { type Dataset, type DataStore, type Instance, Model, type ObjectId, type StoredModel } from '../../core';
import type { LazyIterable } from '../../utils';
export interface PCAInstance extends Instance {
    x: number[];
    y: undefined;
}
export declare class PCA extends Model<PCAInstance, number[]> {
    title: string;
    serviceName: string;
    parameters: {};
    model: MLPCA;
    train(dataset: Dataset<PCAInstance> | LazyIterable<PCAInstance>): Promise<void>;
    predict(x: number[]): Promise<number[]>;
    clear(): void;
    save(store: DataStore, name: string, metadata?: Record<string, unknown>, id?: ObjectId): Promise<ObjectId>;
    load(store: DataStore, id?: ObjectId): Promise<StoredModel>;
    download(metadata?: Record<string, unknown>): Promise<void>;
    upload(...files: File[]): Promise<StoredModel>;
    private write;
    private read;
}
