import type { BatchPrediction } from '../batch-prediction';
import { Component } from '../../core/component';
import { Stream } from '../../core/stream';
import type { ClassifierPrediction } from '../../core/types';
export declare type ConfusionMatrixT = Array<{
    x: string;
    y: string;
    v: number;
}>;
export declare class ConfusionMatrix extends Component {
    #private;
    title: string;
    $confusion: Stream<ConfusionMatrixT>;
    $accuracy: Stream<number>;
    $labels: Stream<string[]>;
    $selected: Stream<{
        x: string;
        y: string;
        v: number;
    }>;
    $progress: Stream<number | false>;
    constructor(prediction: BatchPrediction);
    setup(): void;
    updateConfusionMatrix(predictions: ClassifierPrediction[]): void;
    updateAccuracy(predictions: ClassifierPrediction[]): void;
    mount(target?: HTMLElement): void;
}
