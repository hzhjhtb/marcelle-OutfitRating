import type { ChartOptions as ChartJsOptions } from 'chart.js';
import type { ServiceIterable } from '../../core/data-store/service-iterable';
import { Component } from '../../core/component';
import { Stream } from '../../core/stream';
export interface GenericChartOptions {
    preset?: 'line' | 'line-fast' | 'bar' | 'bar-fast' | 'scatter';
    options?: ChartJsOptions & {
        xlabel?: string;
        ylabel?: string;
    };
}
export interface ChartDataset {
    dataStream: Stream<number[]> | Stream<Array<{
        x: unknown;
        y: unknown;
    }>>;
    label: string;
    options: {
        type?: string;
        labels?: string[];
        [key: string]: unknown;
    };
}
export declare class GenericChart extends Component {
    #private;
    title: string;
    options: ChartJsOptions & {
        xlabel?: string;
        ylabel?: string;
    };
    constructor({ preset, options }?: GenericChartOptions);
    addSeries(series: Stream<number[]> | Stream<Array<{
        x: any;
        y: any;
    }>> | ServiceIterable<number> | ServiceIterable<{
        x: any;
        y: any;
    }>, label: string, options?: Record<string, unknown>): void;
    setColors(colorStream: Stream<number[]>): void;
    removeSeries(dataStream: Stream<number[]> | Stream<Array<{
        x: unknown;
        y: unknown;
    }>>): void;
    clear(): void;
    updateView(): void;
    mount(target?: HTMLElement): void;
}
